# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file into the container at /app
# We copy this first to leverage Docker's layer caching.
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy the rest of the backend application code into the container
COPY ./backend/ /app/backend/
COPY ./tools/ /app/tools/
COPY ./prompts/ /app/prompts/
COPY ./sandbox/ /app/sandbox/
COPY config.yaml .
COPY llm_taxonomy.yaml /app/backend/

# Make port 8000 available to the world outside this container
EXPOSE 8000

# Define the command to run the application
# This will start the Uvicorn server, making the API accessible.
# The host 0.0.0.0 is crucial for it to be accessible from outside the container.
CMD ["uvicorn", "backend.api.main:app", "--host", "0.0.0.0", "--port", "8000"]